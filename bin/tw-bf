#!/bin/bash
#! Script to build the whole project when its your first-day @tw
set -e

#-------------- Settings -----------------
HIVE="hive-0.12.0-transwarp"
NGMR="ngmr-1.7-transwarp"
UPLOAD_DELL="/tmp/jars-dell"
UPLOAD_JK="/tmp/jars"
#-----------------------------------------

JAVA_HOME=/usr/lib/jvm/java-7-oracle
JRE_HOME=$JAVA_HOME/jre
CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
MAVEN_OPTS="-Xmx6000m -XX:MaxPermSize=4000m"

THISPATH=$(cd ${0%/*} && echo $PWD/${0##*/})
THISHOME=`dirname $THISPATH`
DEFAULT_ACTIONS=("hive" "spark" "idbc" "inceptor" "all")
ACTIONS=
CLEAN="false"
BUILD_ALL="false"

function usage() {
    echo
    echo "USAGE: `basename $0` [-c] actions"
    echo "  -c            If performing cleaning before maven compiling"
    echo "  actions       An action or multiple actions separated by ',' delimiter."
    echo "                Supported actions (in lower case): hive|spark|idbc|inceptor|all."
    echo "                Components dependency:"
    echo "                  * Hive and Spark being independent"
    echo "                  * IDBC depends on Spark"
    echo "                  * Inceptor depends on all three other components"
    echo
}

function notify() {
    spd-say "$1"
}

# Check CLI options
if [ $# -lt 1 ]; then
    usage && exit 1;
fi

## Check DEVROOT env.
if [[ -z $DEVROOT ]]; then
      echo "export DEVROOT=/path/to/projects; then continue"
      exit 0;
fi

## Parse options
while [ $# -gt 0 ]; do
  OPT=$1
  case $OPT in
    -c)
      CLEAN="true" && shift;;
    -h)
      usage && exit 0;;
    *)
      break;;
  esac
done

## Parse actions
IFS=',' read -ra ACTIONS <<< $1
for i in "${ACTIONS[@]}"; do
    if [[ ! "${DEFAULT_ACTIONS[@]}" =~ "$i" ]]; then
        echo "Unrecognized action: $i" && usage && exit 1;
    fi
    if [[ $i == "all" ]]; then
        BUILD_ALL="true"
    fi
done

## Set default actions
if [[ $ACTIONS == "" ]]; then
    ACTIONS=("all")
    BUILD_ALL="true"
fi

echo "--------------------------------------------------------"
echo "mvn clean: $CLEAN"
echo "mvn optns: $MAVEN_OPTS"
echo
echo "Actions: ** ${ACTIONS[@]} **"
echo
echo "DEVROOT: $DEVROOT"
echo "   HIVE: $DEVROOT/$HIVE"
echo "   NGMR: $DEVROOT/$NGMR"
echo "--------------------------------------------------------"
while true; do
    read -p "Do you want to compile with above config? (y/n) " yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

function build_hive() {
    cd $DEVROOT/$HIVE/src
    if [[ $CLEAN == "true" ]]; then mvn clean; fi
    mvn package install -DskipTests -Pidea
    notify "Hive building completed"
}

function build_spark() {
    cd $DEVROOT/$NGMR/spark
    if [[ $CLEAN == "true" ]]; then mvn clean; fi
    mvn package install -DskipTests -Pyarn -Pidea
    notify "Spark building completed"
}

function build_idbc() {
    cd $DEVROOT/$NGMR/idbc
    if [[ $CLEAN == "true" ]]; then mvn clean; fi
    mvn package install -DskipTests
    notify "Driver building completed"
}

function build_inceptor() {
    cd $DEVROOT/$NGMR/inceptor
    if [[ $CLEAN == "true" ]]; then mvn clean; fi
    mvn package install -Dmaven.test.skip=true -Pidea
    notify "Inceptor building completed"
}

## Run building action
if [[ $BUILD_ALL == "true" ]]; then
    build_hive
    build_spark
    build_idbc
    build_inceptor
else
    if [[ "${ACTIONS[@]}" =~ "hive" ]]; then
        build_hive
    fi
    if [[ "${ACTIONS[@]}" =~ "spark" ]]; then
        build_spark
    fi
    if [[ "${ACTIONS[@]}" =~ "idbc" ]]; then
        build_idbc
    fi
    if [[ "${ACTIONS[@]}" =~ "inceptor" ]]; then
        build_inceptor
    fi
fi

## Copy compiled packages for regression tests
if [[ -e "$THISHOME/tw-sync-bf" ]]; then
    bash $THISHOME/tw-sync-bf
fi

exit 0;
